name: Silent Frontend

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'frontend/*'

  push:
    branches:
      - develop
    paths:
      - 'frontend/*'


permissions:
  contents: read

env: 
  ECR_REPOSITORY: silent-frontend
  IMAGE_TAG: ${{ github.sha }}

jobs:
  containerize:
    name: Containerize
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: Containerize

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "v1.23.9"
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Update kube config
        run: aws eks update-kubeconfig --name silent --region us-east-1

      - name: Deploy
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          export IMAGE_TAG=${{ env.IMAGE_TAG }}
          export KUBECONFIG=/home/runner/.kube/config
          envsubst < k8s/frontend/kustomization.tmpl.yaml > k8s/frontend/kustomization.yaml
          kubectl kustomize k8s/frontend | kubectl apply -f -
